name: Docker Build, Test, and Deploy


on:
  push:
    branches: [main]


jobs:

  test:

    runs-on: ubuntu-latest 

    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build test image
      run: docker build -t mykoladmytrash/multi-test -f ./client/Dockerfile.dev ./client
    
    - name: Run test
      run: docker run -e CI=true mykoladmytrash/multi-test npm test


  deploy:

    runs-on: ubuntu-latest

    needs: test


    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}


    - name: Build production version and push to Docker Hub
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/client:latest ./client
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest ./nginx
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/server:latest ./server
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest ./worker 


        docker push ${{ secrets.DOCKERHUB_USERNAME }}/client:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/server:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest
 # ОНОВЛЕННЯ DOCKER COMPOSE З РЕАЛЬНИМИ ІМЕНАМИ ОБРАЗІВ
    - name: Update docker-compose with actual image names
      run: |
        sed -i "s|image: mstr12/client|image: ${{ secrets.DOCKERHUB_USERNAME }}/client:latest|g" docker-compose.yml
        sed -i "s|image: mstr12/nginx|image: ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest|g" docker-compose.yml
        sed -i "s|image: mstr12/server|image: ${{ secrets.DOCKERHUB_USERNAME }}/server:latest|g" docker-compose.yml
        sed -i "s|image: mstr12/worker|image: ${{ secrets.DOCKERHUB_USERNAME }}/worker:latest|g" docker-compose.yml

    # ДЕПЛОЙ НА ELASTIC BEANSTALK З DOCKER COMPOSE
    - name: Deploy to Elastic Beanstalk with Docker Compose
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}         # 8. secret_access_key
        application_name: multi-docker1       # 2. app
        environment_name: Multi-docker1-env    # 3. env
        region: us-east-1                      # 1. region
        version_label: multi-docker-${{ github.sha }}
        deployment_package: docker-compose.yml                 # ВИКОРИСТОВУЄМО DOCKER COMPOSE
        existing_bucket_name: elasticbeanstalk-us-east-1-947625949622
        use_existing_version_if_available: true
        wait_for_deployment: true
                